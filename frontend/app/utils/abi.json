{
    "abi": [
        {
            "type": "constructor",
            "inputs": [
                {
                    "name": "minimumWager",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "vrfCoordinatorAddress",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "subscriptionId",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "gasLane",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "callbackGasLimit",
                    "type": "uint32",
                    "internalType": "uint32"
                },
                {
                    "name": "numOfRequestConfirmations",
                    "type": "uint16",
                    "internalType": "uint16"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "fallback",
            "stateMutability": "payable"
        },
        {
            "type": "receive",
            "stateMutability": "payable"
        },
        {
            "type": "function",
            "name": "acceptOwnership",
            "inputs": [],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "bet",
            "inputs": [
                {
                    "name": "userChoice",
                    "type": "uint8",
                    "internalType": "uint8"
                }
            ],
            "outputs": [],
            "stateMutability": "payable"
        },
        {
            "type": "function",
            "name": "fund",
            "inputs": [],
            "outputs": [],
            "stateMutability": "payable"
        },
        {
            "type": "function",
            "name": "getPotentialPayoutForAddress",
            "inputs": [
                {
                    "name": "user",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getRecentCoinFlipResultByAddress",
            "inputs": [
                {
                    "name": "user",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct CoinFlip.CoinFlipRequest",
                    "components": [
                        {
                            "name": "requestId",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "amount",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "state",
                            "type": "uint8",
                            "internalType": "enum CoinFlip.State"
                        },
                        {
                            "name": "user",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "choice",
                            "type": "uint8",
                            "internalType": "enum CoinFlip.Choice"
                        }
                    ]
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getResultByRequestId",
            "inputs": [
                {
                    "name": "requestId",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct CoinFlip.CoinFlipRequest",
                    "components": [
                        {
                            "name": "requestId",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "amount",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "state",
                            "type": "uint8",
                            "internalType": "enum CoinFlip.State"
                        },
                        {
                            "name": "user",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "choice",
                            "type": "uint8",
                            "internalType": "enum CoinFlip.Choice"
                        }
                    ]
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getTotalPotentialPayout",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "owner",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "rawFulfillRandomWords",
            "inputs": [
                {
                    "name": "requestId",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "randomWords",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "s_vrfCoordinator",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "contract IVRFCoordinatorV2Plus"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "setCoordinator",
            "inputs": [
                {
                    "name": "_vrfCoordinator",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "transferOwnership",
            "inputs": [
                {
                    "name": "to",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "withdraw",
            "inputs": [
                {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "event",
            "name": "CoinFlip__ErrorLog",
            "inputs": [
                {
                    "name": "message",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                },
                {
                    "name": "requestId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "CoinFlip__FlipLoss",
            "inputs": [
                {
                    "name": "player",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "requestId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "CoinFlip__FlipRequest",
            "inputs": [
                {
                    "name": "player",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "requestId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "choice",
                    "type": "uint8",
                    "indexed": false,
                    "internalType": "enum CoinFlip.Choice"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "CoinFlip__FlipWin",
            "inputs": [
                {
                    "name": "player",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "requestId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "CoinFlip__Funded",
            "inputs": [
                {
                    "name": "funder",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "CoinFlip__PaymentFailed",
            "inputs": [
                {
                    "name": "user",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "requestId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "CoinFlip__Withdrawl",
            "inputs": [
                {
                    "name": "balance",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "CoordinatorSet",
            "inputs": [
                {
                    "name": "vrfCoordinator",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "OwnershipTransferRequested",
            "inputs": [
                {
                    "name": "from",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "to",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "OwnershipTransferred",
            "inputs": [
                {
                    "name": "from",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "to",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                }
            ],
            "anonymous": false
        },
        {
            "type": "error",
            "name": "CoinFlip__BetIsBelowMinimumAmount",
            "inputs": [
                {
                    "name": "player",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ]
        },
        {
            "type": "error",
            "name": "CoinFlip__ExistingBetIsInProgress",
            "inputs": [
                {
                    "name": "player",
                    "type": "address",
                    "internalType": "address"
                }
            ]
        },
        {
            "type": "error",
            "name": "CoinFlip__InsufficientFundsForPayout",
            "inputs": [
                {
                    "name": "player",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "wageAmount",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "balance",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ]
        },
        {
            "type": "error",
            "name": "CoinFlip__InsufficientFundsToWithdraw",
            "inputs": [
                {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ]
        },
        {
            "type": "error",
            "name": "CoinFlip__NoBetFoundForRequestId",
            "inputs": [
                {
                    "name": "requestId",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ]
        },
        {
            "type": "error",
            "name": "CoinFlip__PayoutFailed",
            "inputs": [
                {
                    "name": "player",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "requestId",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ]
        },
        {
            "type": "error",
            "name": "OnlyCoordinatorCanFulfill",
            "inputs": [
                {
                    "name": "have",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "want",
                    "type": "address",
                    "internalType": "address"
                }
            ]
        },
        {
            "type": "error",
            "name": "OnlyOwnerOrCoordinator",
            "inputs": [
                {
                    "name": "have",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "owner",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "coordinator",
                    "type": "address",
                    "internalType": "address"
                }
            ]
        },
        {
            "type": "error",
            "name": "ZeroAddress",
            "inputs": []
        }
    ],
    "bytecode": {
        "object": "0x61012060405234801561001157600080fd5b50604051611b09380380611b09833981016040819052610030916101e3565b8433806000816100875760405162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f000000000000000060448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b03848116919091179091558116156100b7576100b78161013a565b5050506001600160a01b0381166100e15760405163d92e233d60e01b815260040160405180910390fd5b600280546001600160a01b03199081166001600160a01b0393841617909155610100979097526003805490971695169490941790945560809190915263ffffffff90921660a05260c09190915261ffff1660e05261026a565b336001600160a01b038216036101925760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000604482015260640161007e565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b60008060008060008060c087890312156101fc57600080fd5b865160208801519096506001600160a01b038116811461021b57600080fd5b809550506040870151935060608701519250608087015163ffffffff8116811461024457600080fd5b60a088015190925061ffff8116811461025c57600080fd5b809150509295509295509295565b60805160a05160c05160e0516101005161185b6102ae60003960006107ed01526000610a0c015260006109bc01526000610a37015260006109df015261185b6000f3fe6080604052600436106100bd5760003560e01c806396e5221711610079578063b60d428811610056578063b60d428814610218578063b9357b3b14610220578063d0821b0e14610240578063f2fde38b1461025357005b806396e52217146101b65780639995018c146101cb5780639eccacf6146101f857005b80631fe543e3146100c65780632e1a7d4d146100e65780633bcaeda71461010657806379ba50971461014f5780638da5cb5b146101645780638ea981171461019657005b366100c457005b005b3480156100d257600080fd5b506100c46100e13660046114b5565b610273565b3480156100f257600080fd5b506100c461010136600461157f565b6102c6565b34801561011257600080fd5b5061013c610121366004611598565b6001600160a01b031660009081526008602052604090205490565b6040519081526020015b60405180910390f35b34801561015b57600080fd5b506100c4610412565b34801561017057600080fd5b506000546001600160a01b03165b6040516001600160a01b039091168152602001610146565b3480156101a257600080fd5b506100c46101b1366004611598565b6104bc565b3480156101c257600080fd5b5060055461013c565b3480156101d757600080fd5b506101eb6101e636600461157f565b6105ae565b60405161014691906115f2565b34801561020457600080fd5b5060025461017e906001600160a01b031681565b6100c4610667565b34801561022c57600080fd5b506101eb61023b366004611598565b610744565b6100c461024e36600461164c565b6107a1565b34801561025f57600080fd5b506100c461026e366004611598565b610d42565b6002546001600160a01b031633146102b85760025460405163073e64fd60e21b81523360048201526001600160a01b0390911660248201526044015b60405180910390fd5b6102c28282610d56565b5050565b6102ce611361565b3360009081526004602052604090205460ff16156102fe5760405162461bcd60e51b81526004016102af9061166f565b336000908152600460205260409020805460ff19166001179055478181101561033d576040516326095d1760e21b8152600481018390526024016102af565b604051600090339084908381818185875af1925050503d806000811461037f576040519150601f19603f3d011682016040523d82523d6000602084013e610384565b606091505b50509050806103c95760405162461bcd60e51b815260206004820152601160248201527015da5d1a191c985dd85b0819985a5b1959607a1b60448201526064016102af565b604051839083907f2e7a4cac49b0acfaa6edba0420c36e452e5a018a3b647a30b547594202b969cd90600090a35050336000908152600460205260409020805460ff1916905550565b6001546001600160a01b031633146104655760405162461bcd60e51b815260206004820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b60448201526064016102af565b60008054336001600160a01b0319808316821784556001805490911690556040516001600160a01b0390921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b6000546001600160a01b031633148015906104e257506002546001600160a01b03163314155b1561053357336104fa6000546001600160a01b031690565b60025460405163061db9c160e01b81526001600160a01b03938416600482015291831660248301529190911660448201526064016102af565b6001600160a01b03811661055a5760405163d92e233d60e01b815260040160405180910390fd5b600280546001600160a01b0319166001600160a01b0383169081179091556040519081527fd1a6a14209a385a964d036e404cb5cfb71f4000cdb03c9366292430787261be69060200160405180910390a150565b6105b661145f565b600082815260066020908152604091829020825160a08101845281548152600182015492810192909252600280820154929391929184019160ff1690811115610601576106016115c8565b6002811115610612576106126115c8565b8152600282015461010081046001600160a01b03166020830152604090910190600160a81b900460ff16600181111561064d5761064d6115c8565b600181111561065e5761065e6115c8565b90525092915050565b3360009081526004602052604090205460ff16156106975760405162461bcd60e51b81526004016102af9061166f565b336000908152600460205260409020805460ff19166001179055346106fe5760405162461bcd60e51b815260206004820152601b60248201527f43616e6e6f742066756e642077697468207a65726f206574686572000000000060448201526064016102af565b604051349033907fa559b618584694355d78380f142678c22fafa03a27d85f8d7e0406ea8aeb369990600090a3336000908152600460205260409020805460ff19169055565b61074c61145f565b6001600160a01b038216600090815260076020908152604091829020825160a08101845281548152600182015492810192909252600280820154929391929184019160ff1690811115610601576106016115c8565b3360009081526004602052604090205460ff16156107d15760405162461bcd60e51b81526004016102af9061166f565b336000908152600460205260409020805460ff191660011790557f00000000000000000000000000000000000000000000000000000000000000003410156108345760405163e5ab106560e01b81523360048201523460248201526044016102af565b336000908152600760209081526040808320815160a08101835281548152600182015493810193909352600280820154919284019160ff169081111561087c5761087c6115c8565b600281111561088d5761088d6115c8565b8152600282015461010081046001600160a01b03166020830152604090910190600160a81b900460ff1660018111156108c8576108c86115c8565b60018111156108d9576108d96115c8565b9052506020810151909150158015906109075750600081604001516002811115610905576109056115c8565b145b15610927576040516364bb63a960e11b81523360048201526024016102af565b600061093334476116b5565b9050346005548261094491906116b5565b1015610972576040516334b8324360e01b8152336004820152346024820152604481018290526064016102af565b600061097f3460026116ce565b3360009081526008602052604081208290556005805492935083929091906109a89084906116e5565b90915550506002546040805160c0810182527f000000000000000000000000000000000000000000000000000000000000000081527f000000000000000000000000000000000000000000000000000000000000000060208083019190915261ffff7f0000000000000000000000000000000000000000000000000000000000000000168284015263ffffffff7f00000000000000000000000000000000000000000000000000000000000000001660608301526001608083015282519081018352600080825260a08301919091529151634d8e1c2f60e11b815291926001600160a01b031691639b1c385e91610aa1916004016116f8565b6020604051808303816000875af1158015610ac0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae49190611796565b905080337fcd1a2ace2d4d20c404739fb661c12614925d889b8cf76a7ee853b21bf9325d3034610b1560028a6117c5565b60ff166001811115610b2957610b296115c8565b604051610b379291906117e7565b60405180910390a36040805160a0810182528281523460208201526000918101828152336020820152604001610b6e6002896117c5565b60ff166001811115610b8257610b826115c8565b6001811115610b9357610b936115c8565b81525090508060066000848152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548160ff02191690836002811115610bea57610bea6115c8565b021790555060608201516002820180546001600160a01b0390921661010002610100600160a81b031983168117825560808501519260ff60a81b19909116610100600160b01b031990911617600160a81b836001811115610c4d57610c4d6115c8565b02179055509050508060076000336001600160a01b03166001600160a01b03168152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548160ff02191690836002811115610cb957610cb96115c8565b021790555060608201516002820180546001600160a01b0390921661010002610100600160a81b031983168117825560808501519260ff60a81b19909116610100600160b01b031990911617600160a81b836001811115610d1c57610d1c6115c8565b021790555050336000908152600460205260409020805460ff1916905550505050505050565b610d4a611361565b610d53816113b6565b50565b6000600282600081518110610d6d57610d6d6117fb565b6020026020010151610d7f9190611811565b6001811115610d9057610d906115c8565b90506000600660008581526020019081526020016000206040518060a001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff166002811115610dea57610dea6115c8565b6002811115610dfb57610dfb6115c8565b8152600282015461010081046001600160a01b03166020830152604090910190600160a81b900460ff166001811115610e3657610e366115c8565b6001811115610e4757610e476115c8565b8152505090508060200151600003610ebe57837f4157d129df4d0ab547e286702e1ed7b0e794d1125186f5ec5391af54478a0cfd604051610eb090602080825260149082015273496e76616c69642072657175657374206461746160601b604082015260600190565b60405180910390a250505050565b600081602001516002610ed191906116ce565b90508060056000828254610ee591906116b5565b909155505060608201516001600160a01b0316600090815260086020526040812055826001811115610f1957610f196115c8565b82608001516001811115610f2f57610f2f6115c8565b03611193576001604083810182815260008881526006602090815292902085518155918501518284015551600280830180548795919260ff1990911691908490811115610f7e57610f7e6115c8565b021790555060608201516002820180546001600160a01b0390921661010002610100600160a81b031983168117825560808501519260ff60a81b19909116610100600160b01b031990911617600160a81b836001811115610fe157610fe16115c8565b0217905550505060608201516001600160a01b0316600090815260076020908152604091829020845181559084015160018083019190915591840151600280830180548795919260ff1990911691908490811115611041576110416115c8565b021790555060608201516002820180546001600160a01b0390921661010002610100600160a81b031983168117825560808501519260ff60a81b19909116610100600160b01b031990911617600160a81b8360018111156110a4576110a46115c8565b0217905550505060608201516040516000916001600160a01b03169083908381818185875af1925050503d80600081146110fa576040519150601f19603f3d011682016040523d82523d6000602084013e6110ff565b606091505b505090508061114557818684606001516001600160a01b03167fe02e9a0c7bdbe73f9359a166a81616de5a13b97da98b8620870415ee67d5993c60405160405180910390a45b8583606001516001600160a01b03167fc57938e16f953ce4b6bb2de12237f1c51172c5c151aa4520f1c32d0406fb7dd68460405161118591815260200190565b60405180910390a35061135a565b6002604083810182815260008881526006602090815292902085518155918501516001808401919091559051828401805487959293919260ff19909116919084908111156111e3576111e36115c8565b021790555060608201516002820180546001600160a01b0390921661010002610100600160a81b031983168117825560808501519260ff60a81b19909116610100600160b01b031990911617600160a81b836001811115611246576112466115c8565b0217905550505060608201516001600160a01b0316600090815260076020908152604091829020845181559084015160018083019190915591840151600280830180548795919260ff19909116919084908111156112a6576112a66115c8565b021790555060608201516002820180546001600160a01b0390921661010002610100600160a81b031983168117825560808501519260ff60a81b19909116610100600160b01b031990911617600160a81b836001811115611309576113096115c8565b02179055509050508482606001516001600160a01b03167f7bfdcf862d0d76c9b21f7f4458652336ea04e909cf1e6f0aff5566dc0705a1858360405161135191815260200190565b60405180910390a35b5050505050565b6000546001600160a01b031633146113b45760405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b60448201526064016102af565b565b336001600160a01b0382160361140e5760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c6600000000000000000060448201526064016102af565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b6040518060a0016040528060008152602001600081526020016000600281111561148b5761148b6115c8565b815260006020820181905260409091015290565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156114c857600080fd5b8235915060208084013567ffffffffffffffff808211156114e857600080fd5b818601915086601f8301126114fc57600080fd5b81358181111561150e5761150e61149f565b8060051b604051601f19603f830116810181811085821117156115335761153361149f565b60405291825284820192508381018501918983111561155157600080fd5b938501935b8285101561156f57843584529385019392850192611556565b8096505050505050509250929050565b60006020828403121561159157600080fd5b5035919050565b6000602082840312156115aa57600080fd5b81356001600160a01b03811681146115c157600080fd5b9392505050565b634e487b7160e01b600052602160045260246000fd5b600281106115ee576115ee6115c8565b9052565b8151815260208083015190820152604082015160a08201906003811061161a5761161a6115c8565b60408301526060838101516001600160a01b03169083015260808084015190611645908401826115de565b5092915050565b60006020828403121561165e57600080fd5b813560ff811681146115c157600080fd5b6020808252601690820152751499515b9d1c985b98de481b9bdd08185b1b1bddd95960521b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b818103818111156116c8576116c861169f565b92915050565b80820281158282048414176116c8576116c861169f565b808201808211156116c8576116c861169f565b60006020808352835160208401526020840151604084015261ffff6040850151166060840152606084015163ffffffff80821660808601528060808701511660a0860152505060a084015160c08085015280518060e086015260005b818110156117715782810184015186820161010001528301611754565b506101009250600083828701015282601f19601f830116860101935050505092915050565b6000602082840312156117a857600080fd5b5051919050565b634e487b7160e01b600052601260045260246000fd5b600060ff8316806117d8576117d86117af565b8060ff84160691505092915050565b828152604081016115c160208301846115de565b634e487b7160e01b600052603260045260246000fd5b600082611820576118206117af565b50069056fea26469706673582212203ebe1cd690066d52f14455cee723c13b797795b1b47f41b306b43c80d0461c0e64736f6c63430008190033",
        "sourceMap": "685:11690:38:-:0;;;4872:550;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5113:21;6254:10:3;;373:1:0;6254:10:3;610:59:1;;;;-1:-1:-1;;;610:59:1;;1023:2:41;610:59:1;;;1005:21:41;1062:2;1042:18;;;1035:30;1101:26;1081:18;;;1074:54;1145:18;;610:59:1;;;;;;;;;680:7;:18;;-1:-1:-1;;;;;;680:18:1;-1:-1:-1;;;;;680:18:1;;;;;;;;;;712:26;;;708:89;;754:32;773:12;754:18;:32::i;:::-;-1:-1:-1;;;;;;;;6276:29:3;::::1;6272:70;;6322:13;;-1:-1:-1::0;;;6322:13:3::1;;;;;;;;;;;6272:70;6347:16;:57:::0;;-1:-1:-1;;;;;;6347:57:3;;::::1;-1:-1:-1::0;;;;;6347:57:3;;::::1;;::::0;;;::::1;5146:28:38::0;;;;5184:23:::1;:47:::0;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;5241:33:::1;::::0;;;;5284:37:::1;::::0;;::::1;;::::0;5331:19:::1;::::0;;;;5360:55:::1;;;::::0;685:11690;;1630:257:1;1757:10;-1:-1:-1;;;;;1751:16:1;;;1743:52;;;;-1:-1:-1;;;1743:52:1;;1376:2:41;1743:52:1;;;1358:21:41;1415:2;1395:18;;;1388:30;1454:25;1434:18;;;1427:53;1497:18;;1743:52:1;1174:347:41;1743:52:1;1806:14;:19;;-1:-1:-1;;;;;;1806:19:1;-1:-1:-1;;;;;1806:19:1;;;;;;;;;-1:-1:-1;1868:7:1;;1841:39;;1806:19;;1868:7;;1841:39;;-1:-1:-1;1841:39:1;1630:257;:::o;14:802:41:-;127:6;135;143;151;159;167;220:3;208:9;199:7;195:23;191:33;188:53;;;237:1;234;227:12;188:53;260:16;;319:2;304:18;;298:25;260:16;;-1:-1:-1;;;;;;352:31:41;;342:42;;332:70;;398:1;395;388:12;332:70;421:5;411:15;;;466:2;455:9;451:18;445:25;435:35;;510:2;499:9;495:18;489:25;479:35;;559:3;548:9;544:19;538:26;608:10;599:7;595:24;586:7;583:37;573:65;;634:1;631;624:12;573:65;709:3;694:19;;688:26;657:7;;-1:-1:-1;758:6:41;745:20;;733:33;;723:61;;780:1;777;770:12;723:61;803:7;793:17;;;14:802;;;;;;;;:::o;1174:347::-;685:11690:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
        "linkReferences": {}
    },
    "deployedBytecode": {
        "object": "",
        "sourceMap": "685:11690:38:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7487:278:3;;;;;;;;;;-1:-1:-1;7487:278:3;;;;;:::i;:::-;;:::i;6167:407:38:-;;;;;;;;;;-1:-1:-1;6167:407:38;;;;;:::i;:::-;;:::i;11874:152::-;;;;;;;;;;-1:-1:-1;11874:152:38;;;;;:::i;:::-;-1:-1:-1;;;;;11987:32:38;11961:7;11987:32;;;:26;:32;;;;;;;11874:152;;;;1956:25:41;;;1944:2;1929:18;11874:152:38;;;;;;;;1080:342:1;;;;;;;;;;;;;:::i;1466:87::-;;;;;;;;;;-1:-1:-1;1513:7:1;1539;-1:-1:-1;;;;;1539:7:1;1466:87;;;-1:-1:-1;;;;;2156:32:41;;;2138:51;;2126:2;2111:18;1466:87:1;1992:203:41;7827:276:3;;;;;;;;;;-1:-1:-1;7827:276:3;;;;;:::i;:::-;;:::i;11581:111:38:-;;;;;;;;;;-1:-1:-1;11663:22:38;;11581:111;;12206:167;;;;;;;;;;-1:-1:-1;12206:167:38;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;6077:45:3:-;;;;;;;;;;-1:-1:-1;6077:45:3;;;;-1:-1:-1;;;;;6077:45:3;;;5845:173:38;;;:::i;11277:::-;;;;;;;;;;-1:-1:-1;11277:173:38;;;;;:::i;:::-;;:::i;6732:2280::-;;;;;;:::i;:::-;;:::i;891:104:1:-;;;;;;;;;;-1:-1:-1;891:104:1;;;;;:::i;:::-;;:::i;7487:278:3:-;7608:16;;-1:-1:-1;;;;;7608:16:3;7586:10;:39;7582:131;;7688:16;;7642:64;;-1:-1:-1;;;7642:64:3;;7668:10;7642:64;;;3897:34:41;-1:-1:-1;;;;;7688:16:3;;;3947:18:41;;;3940:43;3832:18;;7642:64:3;;;;;;;;7582:131;7718:42;7737:9;7748:11;7718:18;:42::i;:::-;7487:278;;:::o;6167:407:38:-;2209:20:1;:18;:20::i;:::-;5555:10:38::1;5541:25;::::0;;;:13:::1;:25;::::0;;;;;::::1;;5540:26;5532:61;;;;-1:-1:-1::0;;;5532:61:38::1;;;;;;;:::i;:::-;5617:10;5603:25;::::0;;;:13:::1;:25;::::0;;;;:32;;-1:-1:-1;;5603:32:38::1;5631:4;5603:32;::::0;;6264:21:::2;6299:16:::0;;::::2;6295:99;;;6338:45;::::0;-1:-1:-1;;;6338:45:38;;::::2;::::0;::::2;1956:25:41::0;;;1929:18;;6338:45:38::2;1810:177:41::0;6295:99:38::2;6438:34;::::0;6404:9:::2;::::0;6438:10:::2;::::0;6461:6;;6404:9;6438:34;6404:9;6438:34;6461:6;6438:10;:34:::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6403:69;;;6490:4;6482:34;;;::::0;-1:-1:-1;;;6482:34:38;;4757:2:41;6482:34:38::2;::::0;::::2;4739:21:41::0;4796:2;4776:18;;;4769:30;-1:-1:-1;;;4815:18:41;;;4808:47;4872:18;;6482:34:38::2;4555:341:41::0;6482:34:38::2;6531:36;::::0;6560:6;;6551:7;;6531:36:::2;::::0;;;::::2;-1:-1:-1::0;;5670:10:38::1;5684:5;5656:25:::0;;;:13:::1;:25;::::0;;;;:33;;-1:-1:-1;;5656:33:38::1;::::0;;-1:-1:-1;6167:407:38:o;1080:342:1:-;1212:14;;-1:-1:-1;;;;;1212:14:1;1198:10;:28;1190:63;;;;-1:-1:-1;;;1190:63:1;;5103:2:41;1190:63:1;;;5085:21:41;5142:2;5122:18;;;5115:30;-1:-1:-1;;;5161:18:41;;;5154:52;5223:18;;1190:63:1;4901:346:41;1190:63:1;1264:16;1283:7;;1310:10;-1:-1:-1;;;;;;1300:20:1;;;;;;;-1:-1:-1;1330:27:1;;;;;;;1373:42;;-1:-1:-1;;;;;1283:7:1;;;;1310:10;;1283:7;;1373:42;;;1125:297;1080:342::o;7827:276:3:-;1513:7:1;1539;-1:-1:-1;;;;;1539:7:1;8151:10:3;:21;;;;:64;;-1:-1:-1;8198:16:3;;-1:-1:-1;;;;;8198:16:3;8176:10;:39;;8151:64;8147:162;;;8255:10;8267:7;1513::1;1539;-1:-1:-1;;;;;1539:7:1;;1466:87;8267:7:3;8284:16;;8232:70;;-1:-1:-1;;;8232:70:3;;-1:-1:-1;;;;;5510:15:41;;;8232:70:3;;;5492:34:41;5562:15;;;5542:18;;;5535:43;8284:16:3;;;;5594:18:41;;;5587:43;5427:18;;8232:70:3;5252:384:41;8147:162:3;-1:-1:-1;;;;;7927:29:3;::::1;7923:70;;7973:13;;-1:-1:-1::0;;;7973:13:3::1;;;;;;;;;;;7923:70;7998:16;:57:::0;;-1:-1:-1;;;;;;7998:57:3::1;-1:-1:-1::0;;;;;7998:57:3;::::1;::::0;;::::1;::::0;;;8067:31:::1;::::0;2138:51:41;;;8067:31:3::1;::::0;2126:2:41;2111:18;8067:31:3::1;;;;;;;7827:276:::0;:::o;12206:167:38:-;12290:22;;:::i;:::-;12331:35;;;;:24;:35;;;;;;;;;12324:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12331:35;;12324:42;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;12324:42:38;;;;;;;;;;-1:-1:-1;;;12324:42:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;-1:-1:-1;12324:42:38;12206:167;-1:-1:-1;;12206:167:38:o;5845:173::-;5555:10;5541:25;;;;:13;:25;;;;;;;;5540:26;5532:61;;;;-1:-1:-1;;;5532:61:38;;;;;;;:::i;:::-;5617:10;5603:25;;;;:13;:25;;;;;:32;;-1:-1:-1;;5603:32:38;5631:4;5603:32;;;5912:9:::1;5904:53;;;::::0;-1:-1:-1;;;5904:53:38;;5843:2:41;5904:53:38::1;::::0;::::1;5825:21:41::0;5882:2;5862:18;;;5855:30;5921:29;5901:18;;;5894:57;5968:18;;5904:53:38::1;5641:351:41::0;5904:53:38::1;5972:39;::::0;6001:9:::1;::::0;5989:10:::1;::::0;5972:39:::1;::::0;;;::::1;5670:10:::0;5684:5;5656:25;;;:13;:25;;;;;:33;;-1:-1:-1;;5656:33:38;;;5845:173::o;11277:::-;11368:22;;:::i;:::-;-1:-1:-1;;;;;11409:34:38;;;;;;:28;:34;;;;;;;;;11402:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11409:34;;11402:41;;;;;;;;;;;;;;:::i;6732:2280::-;5555:10;5541:25;;;;:13;:25;;;;;;;;5540:26;5532:61;;;;-1:-1:-1;;;5532:61:38;;;;;;;:::i;:::-;5617:10;5603:25;;;;:13;:25;;;;;:32;;-1:-1:-1;;5603:32:38;5631:4;5603:32;;;6882:13:::1;6870:9;:25;6866:119;;;6918:56;::::0;-1:-1:-1;;;6918:56:38;;6952:10:::1;6918:56;::::0;::::1;6171:51:41::0;6964:9:38::1;6238:18:41::0;;;6231:34;6144:18;;6918:56:38::1;5997:274:41::0;6866:119:38::1;7211:10;7126:40;7169:62:::0;;;:28:::1;:62;::::0;;;;;;;7126:105;;::::1;::::0;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;7169:62;;7126:105;;;::::1;;::::0;;::::1;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;-1:-1:-1::0;;;;;7126:105:38::1;;::::0;::::1;::::0;;;;;;-1:-1:-1;;;7126:105:38;::::1;;;;::::0;::::1;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;::::0;;-1:-1:-1;7258:24:38::1;::::0;::::1;::::0;7126:105;;-1:-1:-1;7258:29:38;;::::1;::::0;:84:::1;;-1:-1:-1::0;7331:10:38::1;7304:17;:23;;;:37;;;;;;;;:::i;:::-;;7258:84;7241:217;;;7402:45;::::0;-1:-1:-1;;;7402:45:38;;7436:10:::1;7402:45;::::0;::::1;2138:51:41::0;2111:18;;7402:45:38::1;1992:203:41::0;7241:217:38::1;7563:35;7601:33;7625:9;7601:21;:33;:::i;:::-;7563:71;;7703:9;7678:22;;7648:27;:52;;;;:::i;:::-;:64;7644:252;;;7735:150;::::0;-1:-1:-1;;;7735:150:38;;7789:10:::1;7735:150;::::0;::::1;6743:51:41::0;7817:9:38::1;6810:18:41::0;;;6803:34;6853:18;;;6846:34;;;6716:18;;7735:150:38::1;6541:345:41::0;7644:252:38::1;7925:20;7948:13;7952:9;7948:1;:13;:::i;:::-;7998:10;7971:38;::::0;;;:26:::1;:38;::::0;;;;:53;;;8034:22:::1;:38:::0;;7925:36;;-1:-1:-1;7925:36:38;;8034:22;;7971:38;8034::::1;::::0;7925:36;;8034:38:::1;:::i;:::-;::::0;;;-1:-1:-1;;8102:16:38::1;::::0;8151:322:::1;::::0;;::::1;::::0;::::1;::::0;;8213:9:::1;8151:322:::0;;8247:16:::1;8151:322;::::0;;::::1;::::0;;;;::::1;8303:27;8151:322;::::0;;;;::::1;8366:18;8151:322;::::0;;;;8102:16;8151:322;;;;;;;;::::1;::::0;;8082:17:::1;8151:322:::0;;;;;;;;;;8102:381;;-1:-1:-1;;;8102:381:38;;8082:17;;-1:-1:-1;;;;;8102:16:38::1;::::0;:35:::1;::::0;:381:::1;::::0;::::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8082:401:::0;-1:-1:-1;8082:401:38;8534:10:::1;8499:137;8581:9;8611:14;8624:1;8611:10:::0;:14:::1;:::i;:::-;8604:22;;;;;;;;;;:::i;:::-;8499:137;;;;;;;:::i;:::-;;;;;;;;8684:197;::::0;;::::1;::::0;::::1;::::0;;;;;8722:9:::1;8684:197;::::0;::::1;::::0;8647:34:::1;::::0;8684:197;;8647:34;8684:197;;8816:10:::1;8684:197;::::0;::::1;::::0;;;8855:14:::1;8868:1;8855:10:::0;:14:::1;:::i;:::-;8848:22;;;;;;;;;;:::i;:::-;8684:197;;;;;;;;:::i;:::-;;;::::0;8647:234:::1;;8930:11;8892:24;:35;8917:9;8892:35;;;;;;;;;;;:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;::::0;;-1:-1:-1;8892:49:38::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;8892:49:38;;::::1;;;-1:-1:-1::0;;;;;;8892:49:38;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;8892:49:38;;;-1:-1:-1;;;;;;8892:49:38;;;;-1:-1:-1;;;8892:49:38;::::1;::::0;::::1;;;;;;:::i;:::-;;;;;;;;;8994:11;8951:28;:40;8980:10;-1:-1:-1::0;;;;;8951:40:38::1;-1:-1:-1::0;;;;;8951:40:38::1;;;;;;;;;;;;:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;::::0;;-1:-1:-1;8951:54:38::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;8951:54:38;;::::1;;;-1:-1:-1::0;;;;;;8951:54:38;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;8951:54:38;;;-1:-1:-1;;;;;;8951:54:38;;;;-1:-1:-1;;;8951:54:38;::::1;::::0;::::1;;;;;;:::i;:::-;;;::::0;;-1:-1:-1;;5670:10:38;5684:5;5656:25;;;:13;:25;;;;;:33;;-1:-1:-1;;5656:33:38;;;-1:-1:-1;;;;;;;6732:2280:38:o;891:104:1:-;2209:20;:18;:20::i;:::-;966:22:::1;985:2;966:18;:22::i;:::-;891:104:::0;:::o;9228:1847:38:-;9414:13;9454:1;9437:11;9449:1;9437:14;;;;;;;;:::i;:::-;;;;;;;:18;;;;:::i;:::-;9430:26;;;;;;;;:::i;:::-;9414:42;;9466:36;9505:24;:57;9543:9;9505:57;;;;;;;;;;;9466:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;9466:96:38;;;;;;;;;;-1:-1:-1;;;9466:96:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;9576:13;:20;;;9600:1;9576:25;9572:134;;9665:9;9622:53;;;;;9537:2:41;9519:21;;;9576:2;9556:18;;;9549:30;-1:-1:-1;;;9610:2:41;9595:18;;9588:50;9670:2;9655:18;;9335:344;9622:53:38;;;;;;;;9689:7;;9228:1847;;:::o;9572:134::-;9715:29;9751:13;:20;;;9747:1;:24;;;;:::i;:::-;9715:56;;9807:21;9781:22;;:47;;;;;;;:::i;:::-;;;;-1:-1:-1;;9872:18:38;;;;-1:-1:-1;;;;;9845:46:38;;;;;:26;:46;;;;;9838:53;9930:6;9906:30;;;;;;;;:::i;:::-;:13;:20;;;:30;;;;;;;;:::i;:::-;;9902:1167;;9974:9;9952:19;;;;:31;;;9997:35;;;;:24;:35;;;;;;;:51;;;;;;;;;;;;;;;;;;;9952:19;;9997:51;;-1:-1:-1;;9997:51:38;;;;9974:9;9997:51;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;9997:51:38;;;;;;;;;-1:-1:-1;;;;;9997:51:38;;;;;-1:-1:-1;;;;;;9997:51:38;;;;;;;;;;;-1:-1:-1;;;;9997:51:38;;;-1:-1:-1;;;;;;9997:51:38;;;;-1:-1:-1;;;9997:51:38;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;10091:18:38;;;;-1:-1:-1;;;;;10062:48:38;;;;;:28;:48;;;;;;;;;:64;;;;;;;;;;;;;;;;;;;;;;;;;;10113:13;;10062:64;;-1:-1:-1;;10062:64:38;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;10062:64:38;;;;;;;;;-1:-1:-1;;;;;10062:64:38;;;;;-1:-1:-1;;;;;;10062:64:38;;;;;;;;;;;-1:-1:-1;;;;10062:64:38;;;-1:-1:-1;;;;;;10062:64:38;;;;-1:-1:-1;;;10062:64:38;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;10210:18:38;;;;10209:89;;10170:9;;-1:-1:-1;;;;;10209:25:38;;10259:21;;10170:9;10209:89;10170:9;10209:89;10259:21;10209:25;:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10169:129;;;10318:4;10313:204;;10463:21;10432:9;10392:13;:18;;;-1:-1:-1;;;;;10347:155:38;;;;;;;;;;;10313:204;10607:9;10571:13;:18;;;-1:-1:-1;;;;;10536:133:38;;10634:21;10536:133;;;;1956:25:41;;1944:2;1929:18;;1810:177;10536:133:38;;;;;;;;9938:742;9902:1167;;;10722:10;10700:19;;;;:32;;;10746:35;;;;:24;:35;;;;;;;:51;;;;;;;;;;;;;;;;;;;;;;;10700:19;;10746:51;;;;-1:-1:-1;;10746:51:38;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;10746:51:38;;;;;;;;;-1:-1:-1;;;;;10746:51:38;;;;;-1:-1:-1;;;;;;10746:51:38;;;;;;;;;;;-1:-1:-1;;;;10746:51:38;;;-1:-1:-1;;;;;;10746:51:38;;;;-1:-1:-1;;;10746:51:38;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;10840:18:38;;;;-1:-1:-1;;;;;10811:48:38;;;;;:28;:48;;;;;;;;;:64;;;;;;;;;;;;;;;;;;;;;;;;;;10862:13;;10811:64;;-1:-1:-1;;10811:64:38;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;10811:64:38;;;;;;;;;-1:-1:-1;;;;;10811:64:38;;;;;-1:-1:-1;;;;;;10811:64:38;;;;;;;;;;;-1:-1:-1;;;;10811:64:38;;;-1:-1:-1;;;;;;10811:64:38;;;;-1:-1:-1;;;10811:64:38;;;;;;;;;:::i;:::-;;;;;;;;;10996:9;10960:13;:18;;;-1:-1:-1;;;;;10924:134:38;;11023:21;10924:134;;;;1956:25:41;;1944:2;1929:18;;1810:177;10924:134:38;;;;;;;;9902:1167;9345:1730;;;9228:1847;;:::o;1925:172:1:-;2056:7;;-1:-1:-1;;;;;2056:7:1;2042:10;:21;2034:56;;;;-1:-1:-1;;;2034:56:1;;9886:2:41;2034:56:1;;;9868:21:41;9925:2;9905:18;;;9898:30;-1:-1:-1;;;9944:18:41;;;9937:52;10006:18;;2034:56:1;9684:346:41;2034:56:1;1925:172::o;1630:257::-;1757:10;-1:-1:-1;;;;;1751:16:1;;;1743:52;;;;-1:-1:-1;;;1743:52:1;;10237:2:41;1743:52:1;;;10219:21:41;10276:2;10256:18;;;10249:30;10315:25;10295:18;;;10288:53;10358:18;;1743:52:1;10035:347:41;1743:52:1;1806:14;:19;;-1:-1:-1;;;;;;1806:19:1;-1:-1:-1;;;;;1806:19:1;;;;;;;;;-1:-1:-1;1868:7:1;;1841:39;;1806:19;;1868:7;;1841:39;;-1:-1:-1;1841:39:1;1630:257;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::o;14:127:41:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:1183;239:6;247;300:2;288:9;279:7;275:23;271:32;268:52;;;316:1;313;306:12;268:52;352:9;339:23;329:33;;381:2;434;423:9;419:18;406:32;457:18;498:2;490:6;487:14;484:34;;;514:1;511;504:12;484:34;552:6;541:9;537:22;527:32;;597:7;590:4;586:2;582:13;578:27;568:55;;619:1;616;609:12;568:55;655:2;642:16;677:2;673;670:10;667:36;;;683:18;;:::i;:::-;729:2;726:1;722:10;761:2;755:9;824:2;820:7;815:2;811;807:11;803:25;795:6;791:38;879:6;867:10;864:22;859:2;847:10;844:18;841:46;838:72;;;890:18;;:::i;:::-;926:2;919:22;976:18;;;1010:15;;;;-1:-1:-1;1052:11:41;;;1048:20;;;1080:19;;;1077:39;;;1112:1;1109;1102:12;1077:39;1136:11;;;;1156:142;1172:6;1167:3;1164:15;1156:142;;;1238:17;;1226:30;;1189:12;;;;1276;;;;1156:142;;;1317:6;1307:16;;;;;;;;146:1183;;;;;:::o;1334:180::-;1393:6;1446:2;1434:9;1425:7;1421:23;1417:32;1414:52;;;1462:1;1459;1452:12;1414:52;-1:-1:-1;1485:23:41;;1334:180;-1:-1:-1;1334:180:41:o;1519:286::-;1578:6;1631:2;1619:9;1610:7;1606:23;1602:32;1599:52;;;1647:1;1644;1637:12;1599:52;1673:23;;-1:-1:-1;;;;;1725:31:41;;1715:42;;1705:70;;1771:1;1768;1761:12;1705:70;1794:5;1519:286;-1:-1:-1;;;1519:286:41:o;2200:127::-;2261:10;2256:3;2252:20;2249:1;2242:31;2292:4;2289:1;2282:15;2316:4;2313:1;2306:15;2332:137;2410:1;2403:5;2400:12;2390:46;;2416:18;;:::i;:::-;2445;;2332:137::o;2474:695::-;2707:13;;2689:32;;2777:4;2765:17;;;2759:24;2737:20;;;2730:54;2831:4;2819:17;;2813:24;2676:3;2661:19;;;2873:1;2856:19;;2846:53;;2879:18;;:::i;:::-;2930:4;2915:20;;2908:42;3010:4;2998:17;;;2992:24;-1:-1:-1;;;;;2988:50:41;2966:20;;;2959:80;3088:4;3076:17;;;3070:24;;3103:60;;3142:20;;3070:24;3103:60;:::i;:::-;;2474:695;;;;:::o;3411:269::-;3468:6;3521:2;3509:9;3500:7;3496:23;3492:32;3489:52;;;3537:1;3534;3527:12;3489:52;3576:9;3563:23;3626:4;3619:5;3615:16;3608:5;3605:27;3595:55;;3646:1;3643;3636:12;3994:346;4196:2;4178:21;;;4235:2;4215:18;;;4208:30;-1:-1:-1;;;4269:2:41;4254:18;;4247:52;4331:2;4316:18;;3994:346::o;6276:127::-;6337:10;6332:3;6328:20;6325:1;6318:31;6368:4;6365:1;6358:15;6392:4;6389:1;6382:15;6408:128;6475:9;;;6496:11;;;6493:37;;;6510:18;;:::i;:::-;6408:128;;;;:::o;6891:168::-;6964:9;;;6995;;7012:15;;;7006:22;;6992:37;6982:71;;7033:18;;:::i;7064:125::-;7129:9;;;7150:10;;;7147:36;;;7163:18;;:::i;7194:1125::-;7356:4;7385:2;7414;7403:9;7396:21;7459:6;7453:13;7448:2;7437:9;7433:18;7426:41;7521:2;7513:6;7509:15;7503:22;7498:2;7487:9;7483:18;7476:50;7590:6;7584:2;7576:6;7572:15;7566:22;7562:35;7557:2;7546:9;7542:18;7535:63;7645:2;7637:6;7633:15;7627:22;7668:10;7733:2;7719:12;7715:21;7709:3;7698:9;7694:19;7687:50;7803:2;7796:3;7788:6;7784:16;7778:23;7774:32;7768:3;7757:9;7753:19;7746:61;;;7856:3;7848:6;7844:16;7838:23;7899:4;7892;7881:9;7877:20;7870:34;7933:14;7927:21;7985:6;7979:3;7968:9;7964:19;7957:35;8010:1;8020:149;8034:6;8031:1;8028:13;8020:149;;;8130:22;;;8126:31;;8120:38;8095:17;;;8114:3;8091:27;8084:75;8049:10;;8020:149;;;8024:3;8188;8178:13;;8240:1;8235:2;8226:6;8215:9;8211:22;8207:31;8200:42;8310:2;8303;8299:7;8294:2;8286:6;8282:15;8278:29;8267:9;8263:45;8259:54;8251:62;;;;;7194:1125;;;;:::o;8324:184::-;8394:6;8447:2;8435:9;8426:7;8422:23;8418:32;8415:52;;;8463:1;8460;8453:12;8415:52;-1:-1:-1;8486:16:41;;8324:184;-1:-1:-1;8324:184:41:o;8513:127::-;8574:10;8569:3;8565:20;8562:1;8555:31;8605:4;8602:1;8595:15;8629:4;8626:1;8619:15;8645:157;8675:1;8709:4;8706:1;8702:12;8733:3;8723:37;;8740:18;;:::i;:::-;8792:3;8785:4;8782:1;8778:12;8774:22;8769:27;;;8645:157;;;;:::o;8807:274::-;8991:25;;;8979:2;8964:18;;9025:50;9071:2;9056:18;;9048:6;9025:50;:::i;9086:127::-;9147:10;9142:3;9138:20;9135:1;9128:31;9178:4;9175:1;9168:15;9202:4;9199:1;9192:15;9218:112;9250:1;9276;9266:35;;9281:18;;:::i;:::-;-1:-1:-1;9315:9:41;;9218:112::o",
        "linkReferences": {},
        "immutableReferences": {
            "49468": [
                {
                    "start": 2527,
                    "length": 32
                }
            ],
            "49471": [
                {
                    "start": 2615,
                    "length": 32
                }
            ],
            "49474": [
                {
                    "start": 2492,
                    "length": 32
                }
            ],
            "49477": [
                {
                    "start": 2572,
                    "length": 32
                }
            ],
            "49485": [
                {
                    "start": 2029,
                    "length": 32
                }
            ]
        }
    },
    "methodIdentifiers": {
        "acceptOwnership()": "79ba5097",
        "bet(uint8)": "d0821b0e",
        "fund()": "b60d4288",
        "getPotentialPayoutForAddress(address)": "3bcaeda7",
        "getRecentCoinFlipResultByAddress(address)": "b9357b3b",
        "getResultByRequestId(uint256)": "9995018c",
        "getTotalPotentialPayout()": "96e52217",
        "owner()": "8da5cb5b",
        "rawFulfillRandomWords(uint256,uint256[])": "1fe543e3",
        "s_vrfCoordinator()": "9eccacf6",
        "setCoordinator(address)": "8ea98117",
        "transferOwnership(address)": "f2fde38b",
        "withdraw(uint256)": "2e1a7d4d"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minimumWager\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"vrfCoordinatorAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subscriptionId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasLane\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"numOfRequestConfirmations\",\"type\":\"uint16\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CoinFlip__BetIsBelowMinimumAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"CoinFlip__ExistingBetIsInProgress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wageAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"CoinFlip__InsufficientFundsForPayout\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CoinFlip__InsufficientFundsToWithdraw\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"name\":\"CoinFlip__NoBetFoundForRequestId\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CoinFlip__PayoutFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"coordinator\",\"type\":\"address\"}],\"name\":\"OnlyOwnerOrCoordinator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"name\":\"CoinFlip__ErrorLog\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CoinFlip__FlipLoss\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum CoinFlip.Choice\",\"name\":\"choice\",\"type\":\"uint8\"}],\"name\":\"CoinFlip__FlipRequest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CoinFlip__FlipWin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CoinFlip__Funded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CoinFlip__PaymentFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CoinFlip__Withdrawl\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vrfCoordinator\",\"type\":\"address\"}],\"name\":\"CoordinatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"userChoice\",\"type\":\"uint8\"}],\"name\":\"bet\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getPotentialPayoutForAddress\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getRecentCoinFlipResultByAddress\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"enum CoinFlip.State\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"enum CoinFlip.Choice\",\"name\":\"choice\",\"type\":\"uint8\"}],\"internalType\":\"struct CoinFlip.CoinFlipRequest\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"name\":\"getResultByRequestId\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"enum CoinFlip.State\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"enum CoinFlip.Choice\",\"name\":\"choice\",\"type\":\"uint8\"}],\"internalType\":\"struct CoinFlip.CoinFlipRequest\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalPotentialPayout\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_vrfCoordinator\",\"outputs\":[{\"internalType\":\"contract IVRFCoordinatorV2Plus\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vrfCoordinator\",\"type\":\"address\"}],\"name\":\"setCoordinator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"0xNascosta / RamanSB\",\"details\":\"This contract implements a coin flip betting game using Chainlink VRF for randomness.\",\"kind\":\"dev\",\"methods\":{\"bet(uint8)\":{\"params\":{\"userChoice\":\"The choice of the user (0 for HEADS, 1 for TAILS)\"}},\"constructor\":{\"params\":{\"callbackGasLimit\":\"The gas limit for the VRF callback\",\"gasLane\":\"The gas lane key hash for VRF\",\"minimumWager\":\"The minimum amount required to place a bet\",\"subscriptionId\":\"The subscription ID for Chainlink VRF\",\"vrfCoordinatorAddress\":\"The address of the VRF Coordinator\"}},\"getPotentialPayoutForAddress(address)\":{\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"uint256 The potential payout for the user\"}},\"getRecentCoinFlipResultByAddress(address)\":{\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"CoinFlipRequest The most recent coin flip request\"}},\"getResultByRequestId(uint256)\":{\"params\":{\"requestId\":\"The ID of the request\"},\"returns\":{\"_0\":\"CoinFlipRequest The coin flip request data\"}},\"getTotalPotentialPayout()\":{\"returns\":{\"_0\":\"uint256 The total potential payout\"}},\"withdraw(uint256)\":{\"params\":{\"amount\":\"The amount of ether to withdraw\"}}},\"stateVariables\":{\"MINIMUM_WAGER\":{\"details\":\"minimum amount a user must wage.\"},\"NUMBER_OF_WORDS\":{\"details\":\"Number of random words to request from Chainlink VRF\"},\"i_callbackGasLimit\":{\"details\":\"Maximum gas we are willing to pay for gas used by our fulfillRandomWords\"},\"i_gasLane\":{\"details\":\"Specifies the maximum gas price we are willing to pay to make a request.\"},\"i_numOfRequestConfirmations\":{\"details\":\"Minimum number of blocks to be confirmed before Chainlink VRF invokes our fulfillRandomWords (sends us our random word.)\"},\"i_subscriptionId\":{\"details\":\"Chainlink VRF subscription id.\"},\"s_flipRequestByRequestId\":{\"details\":\"Status of coin flip game by request ID\"},\"s_locksByUser\":{\"details\":\"ReEntrancy locks per user.\"},\"s_potentialPayoutByAddress\":{\"details\":\"Tracks potential payout of in-play (unconcluded) games by address.\"},\"s_recentFlipRequestByAddress\":{\"details\":\"Status of most recent coin flip game by address\"},\"s_totalPotentialPayout\":{\"details\":\"Tracks the potential amount the contract is required to potentially payout (tracks potential payout of unconcluded games)\"},\"s_vrfCoordinatorAddress\":{\"details\":\"Address of Chainlink VRF Coordinator\"}},\"title\":\"CoinFlip Contract\",\"version\":1},\"userdoc\":{\"errors\":{\"CoinFlip__BetIsBelowMinimumAmount(address,uint256)\":[{\"notice\":\"Bet is below the minimum amount\"}],\"CoinFlip__ExistingBetIsInProgress(address)\":[{\"notice\":\"Existing bet in progress (can only place 1 live bet at a time)\"}],\"CoinFlip__InsufficientFundsForPayout(address,uint256,uint256)\":[{\"notice\":\"CoinFlip contract has insufficient funds to payout potential bet.\"}],\"CoinFlip__NoBetFoundForRequestId(uint256)\":[{\"notice\":\"Unable to associate result with bet placed due to requestId not found.\"}],\"CoinFlip__PayoutFailed(address,uint256,uint256)\":[{\"notice\":\"Error with the call function (sending payout)\"}]},\"events\":{\"CoinFlip__ErrorLog(string,uint256)\":{\"notice\":\"Logs a winning (0 ether) bet which should never occur\"},\"CoinFlip__FlipRequest(address,uint256,uint256,uint8)\":{\"notice\":\"Logs a players coin flip bet\"},\"CoinFlip__PaymentFailed(address,uint256,uint256)\":{\"notice\":\"Logs when a payment to a winning player fails\"}},\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"bet(uint8)\":{\"notice\":\"Function to place a bet on the coin flip game\"},\"constructor\":{\"notice\":\"Constructor to initialize the CoinFlip contract\"},\"fund()\":{\"notice\":\"Function to fund the contract with ether\"},\"getPotentialPayoutForAddress(address)\":{\"notice\":\"Get the potential payout for a specific user\"},\"getRecentCoinFlipResultByAddress(address)\":{\"notice\":\"Get the most recent coin flip result for a given address\"},\"getResultByRequestId(uint256)\":{\"notice\":\"Get the coin flip result by request ID\"},\"getTotalPotentialPayout()\":{\"notice\":\"Get the total potential payout for all bets\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"setCoordinator(address)\":{\"notice\":\"Sets the VRF Coordinator addressThis method should only be callable by the coordinator or contract owner\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address.\"},\"withdraw(uint256)\":{\"notice\":\"Function for the owner to withdraw ether from the contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/CoinFlip.sol\":\"CoinFlip\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/contracts/=lib/chainlink-brownie-contracts/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@solmate/=lib/solmate/src/\",\":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/\",\":ds-test/=lib/solmate/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":{\"keccak256\":\"0xdcb0e9135ddbe71ee27ba99fa06656960c66c964cf2ecb29696da1c1427d9861\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f914a1b638300e82d8f5a020a4195235599afebab4ef1e10c6992f3c90e7df3e\",\"dweb:/ipfs/Qmf2MbuVB16qbCGii3U5cjcBvVjAHHYzKp9voJa2eDch9B\"]},\"lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"keccak256\":\"0x7f99ab274f71ea073fe73857cf138f57bf3bfd7c8b5a650641e2c1836a07116a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da3b837feeaf7a6030876fe76a83dbd755e86b82a5591547dce4670be5198401\",\"dweb:/ipfs/QmdJMBsDGfJJdSurabPQU6FRosAwStibUXwbzJ44enAwkU\"]},\"lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c636625a5d29a140612db496d2cca9fb4b48c673adb0fd7b3957d287e75921\",\"dweb:/ipfs/QmNoBX8TY424bdQWyQC7y3kpKfgxyWxhLw7KEhhEEoBN9q\"]},\"lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol\":{\"keccak256\":\"0x26eb0be0a698461dd262d479ed02537c2e0d551f3167b6d7dc8bbfa9189b8f61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67a141b0967dc79992e44ba3f64a6ab9cf36dc60f7d9a9e97c5ed0d0112899a6\",\"dweb:/ipfs/QmT8QGFcEfnHJaZQsv62PsDqGHV6wDuxRrFHG9GKPjZCX2\"]},\"lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol\":{\"keccak256\":\"0x7dca2a64690ddd95ee05e422e1f61e7c1d701aaf5be1390ae12e9bd144266c36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8a347ae8d28007a7537abdc153d3d400d330e02339e8070dd4d783dbdb4de2e\",\"dweb:/ipfs/QmT4rCRw9LBkTYnjRSLNoVP6qhMWA1xg7Hp3wGrRSsV5YL\"]},\"lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol\":{\"keccak256\":\"0x8be8744e3b8380dc85354cf110e8caef8f394266e79120ad675a7da835ed2a85\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12df6d3bd2130709c9f923e5dc8d6e8014c1d4bc35a2722c849f46bdbe1ea9cb\",\"dweb:/ipfs/QmVswk94A2g9KEbK792tw5o4X27HWzP2cw7wPmuRr116js\"]},\"lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol\":{\"keccak256\":\"0x85b348297ce36794e3bf97a47c001fc216bd0ee243e91514a7b395f3fcd189b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b67dd54c0f1083d804f9c0ac6b6a62db1727b090f6d1afb0a8107baea7b40d8\",\"dweb:/ipfs/QmbD4vuTA7sBtR4DxeDjKr2pC51xgw8RRef2AmodnH5B1F\"]},\"lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol\":{\"keccak256\":\"0x839ad7a737ef18147b518b4ec3cbaf4a49dc994db65cf8369ed4e69d169a98a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://882f7357f1a4d7479adda35f81c130bb9a7bfa024d5b9617c75a0539116c2a1d\",\"dweb:/ipfs/QmWzLDgcS9jUh4AT65dQRr46ZhGHgQ4KoNfSdFiFTFqneQ\"]},\"src/CoinFlip.sol\":{\"keccak256\":\"0xc05552d94b72c7b49cdb2c2dcb32b4b17b2e4f4364b8c91bde4aacead978f556\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79aa4b77891a59169856f7f96cf75f00955b2fee186343dd1ea29b539837c1a0\",\"dweb:/ipfs/QmRtJ6mFrhKHEib6UqfojP9hTUPvqFh9yxkkXkBy2kLPmS\"]}},\"version\":1}",
    "metadata": {
        "compiler": {
            "version": "0.8.25+commit.b61c2a91"
        },
        "language": "Solidity",
        "output": {
            "abi": [
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "minimumWager",
                            "type": "uint256"
                        },
                        {
                            "internalType": "address",
                            "name": "vrfCoordinatorAddress",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "subscriptionId",
                            "type": "uint256"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "gasLane",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "uint32",
                            "name": "callbackGasLimit",
                            "type": "uint32"
                        },
                        {
                            "internalType": "uint16",
                            "name": "numOfRequestConfirmations",
                            "type": "uint16"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "constructor"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "player",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        }
                    ],
                    "type": "error",
                    "name": "CoinFlip__BetIsBelowMinimumAmount"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "player",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "CoinFlip__ExistingBetIsInProgress"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "player",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "wageAmount",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "balance",
                            "type": "uint256"
                        }
                    ],
                    "type": "error",
                    "name": "CoinFlip__InsufficientFundsForPayout"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        }
                    ],
                    "type": "error",
                    "name": "CoinFlip__InsufficientFundsToWithdraw"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "requestId",
                            "type": "uint256"
                        }
                    ],
                    "type": "error",
                    "name": "CoinFlip__NoBetFoundForRequestId"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "player",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "requestId",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        }
                    ],
                    "type": "error",
                    "name": "CoinFlip__PayoutFailed"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "have",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "want",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "OnlyCoordinatorCanFulfill"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "have",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "coordinator",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "OnlyOwnerOrCoordinator"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "ZeroAddress"
                },
                {
                    "inputs": [
                        {
                            "internalType": "string",
                            "name": "message",
                            "type": "string",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "requestId",
                            "type": "uint256",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "CoinFlip__ErrorLog",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "player",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "requestId",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "CoinFlip__FlipLoss",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "player",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "requestId",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "enum CoinFlip.Choice",
                            "name": "choice",
                            "type": "uint8",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "CoinFlip__FlipRequest",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "player",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "requestId",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "CoinFlip__FlipWin",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "funder",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "CoinFlip__Funded",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "user",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "requestId",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "CoinFlip__PaymentFailed",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "balance",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "CoinFlip__Withdrawl",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "vrfCoordinator",
                            "type": "address",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "CoordinatorSet",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "from",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "OwnershipTransferRequested",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "from",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "OwnershipTransferred",
                    "anonymous": false
                },
                {
                    "inputs": [],
                    "stateMutability": "payable",
                    "type": "fallback"
                },
                {
                    "inputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "acceptOwnership"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint8",
                            "name": "userChoice",
                            "type": "uint8"
                        }
                    ],
                    "stateMutability": "payable",
                    "type": "function",
                    "name": "bet"
                },
                {
                    "inputs": [],
                    "stateMutability": "payable",
                    "type": "function",
                    "name": "fund"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "user",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getPotentialPayoutForAddress",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "user",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getRecentCoinFlipResultByAddress",
                    "outputs": [
                        {
                            "internalType": "struct CoinFlip.CoinFlipRequest",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "uint256",
                                    "name": "requestId",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "amount",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "enum CoinFlip.State",
                                    "name": "state",
                                    "type": "uint8"
                                },
                                {
                                    "internalType": "address",
                                    "name": "user",
                                    "type": "address"
                                },
                                {
                                    "internalType": "enum CoinFlip.Choice",
                                    "name": "choice",
                                    "type": "uint8"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "requestId",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getResultByRequestId",
                    "outputs": [
                        {
                            "internalType": "struct CoinFlip.CoinFlipRequest",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "uint256",
                                    "name": "requestId",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "amount",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "enum CoinFlip.State",
                                    "name": "state",
                                    "type": "uint8"
                                },
                                {
                                    "internalType": "address",
                                    "name": "user",
                                    "type": "address"
                                },
                                {
                                    "internalType": "enum CoinFlip.Choice",
                                    "name": "choice",
                                    "type": "uint8"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getTotalPotentialPayout",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "owner",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "requestId",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "randomWords",
                            "type": "uint256[]"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "rawFulfillRandomWords"
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "s_vrfCoordinator",
                    "outputs": [
                        {
                            "internalType": "contract IVRFCoordinatorV2Plus",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "_vrfCoordinator",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "setCoordinator"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "transferOwnership"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "withdraw"
                },
                {
                    "inputs": [],
                    "stateMutability": "payable",
                    "type": "receive"
                }
            ],
            "devdoc": {
                "kind": "dev",
                "methods": {
                    "bet(uint8)": {
                        "params": {
                            "userChoice": "The choice of the user (0 for HEADS, 1 for TAILS)"
                        }
                    },
                    "constructor": {
                        "params": {
                            "callbackGasLimit": "The gas limit for the VRF callback",
                            "gasLane": "The gas lane key hash for VRF",
                            "minimumWager": "The minimum amount required to place a bet",
                            "subscriptionId": "The subscription ID for Chainlink VRF",
                            "vrfCoordinatorAddress": "The address of the VRF Coordinator"
                        }
                    },
                    "getPotentialPayoutForAddress(address)": {
                        "params": {
                            "user": "The address of the user"
                        },
                        "returns": {
                            "_0": "uint256 The potential payout for the user"
                        }
                    },
                    "getRecentCoinFlipResultByAddress(address)": {
                        "params": {
                            "user": "The address of the user"
                        },
                        "returns": {
                            "_0": "CoinFlipRequest The most recent coin flip request"
                        }
                    },
                    "getResultByRequestId(uint256)": {
                        "params": {
                            "requestId": "The ID of the request"
                        },
                        "returns": {
                            "_0": "CoinFlipRequest The coin flip request data"
                        }
                    },
                    "getTotalPotentialPayout()": {
                        "returns": {
                            "_0": "uint256 The total potential payout"
                        }
                    },
                    "withdraw(uint256)": {
                        "params": {
                            "amount": "The amount of ether to withdraw"
                        }
                    }
                },
                "version": 1
            },
            "userdoc": {
                "kind": "user",
                "methods": {
                    "acceptOwnership()": {
                        "notice": "Allows an ownership transfer to be completed by the recipient."
                    },
                    "bet(uint8)": {
                        "notice": "Function to place a bet on the coin flip game"
                    },
                    "constructor": {
                        "notice": "Constructor to initialize the CoinFlip contract"
                    },
                    "fund()": {
                        "notice": "Function to fund the contract with ether"
                    },
                    "getPotentialPayoutForAddress(address)": {
                        "notice": "Get the potential payout for a specific user"
                    },
                    "getRecentCoinFlipResultByAddress(address)": {
                        "notice": "Get the most recent coin flip result for a given address"
                    },
                    "getResultByRequestId(uint256)": {
                        "notice": "Get the coin flip result by request ID"
                    },
                    "getTotalPotentialPayout()": {
                        "notice": "Get the total potential payout for all bets"
                    },
                    "owner()": {
                        "notice": "Get the current owner"
                    },
                    "setCoordinator(address)": {
                        "notice": "Sets the VRF Coordinator addressThis method should only be callable by the coordinator or contract owner"
                    },
                    "transferOwnership(address)": {
                        "notice": "Allows an owner to begin transferring ownership to a new address."
                    },
                    "withdraw(uint256)": {
                        "notice": "Function for the owner to withdraw ether from the contract"
                    }
                },
                "version": 1
            }
        },
        "settings": {
            "remappings": [
                "@chainlink/contracts/=lib/chainlink-brownie-contracts/contracts/",
                "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
                "@solmate/=lib/solmate/src/",
                "chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/",
                "ds-test/=lib/solmate/lib/ds-test/src/",
                "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
                "forge-std/=lib/forge-std/src/",
                "openzeppelin-contracts/=lib/openzeppelin-contracts/",
                "solmate/=lib/solmate/src/"
            ],
            "optimizer": {
                "enabled": true,
                "runs": 200
            },
            "metadata": {
                "bytecodeHash": "ipfs"
            },
            "compilationTarget": {
                "src/CoinFlip.sol": "CoinFlip"
            },
            "evmVersion": "paris",
            "libraries": {}
        },
        "sources": {
            "lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/access/ConfirmedOwner.sol": {
                "keccak256": "0xdcb0e9135ddbe71ee27ba99fa06656960c66c964cf2ecb29696da1c1427d9861",
                "urls": [
                    "bzz-raw://f914a1b638300e82d8f5a020a4195235599afebab4ef1e10c6992f3c90e7df3e",
                    "dweb:/ipfs/Qmf2MbuVB16qbCGii3U5cjcBvVjAHHYzKp9voJa2eDch9B"
                ],
                "license": "MIT"
            },
            "lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol": {
                "keccak256": "0x7f99ab274f71ea073fe73857cf138f57bf3bfd7c8b5a650641e2c1836a07116a",
                "urls": [
                    "bzz-raw://da3b837feeaf7a6030876fe76a83dbd755e86b82a5591547dce4670be5198401",
                    "dweb:/ipfs/QmdJMBsDGfJJdSurabPQU6FRosAwStibUXwbzJ44enAwkU"
                ],
                "license": "MIT"
            },
            "lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/interfaces/IOwnable.sol": {
                "keccak256": "0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767",
                "urls": [
                    "bzz-raw://17c636625a5d29a140612db496d2cca9fb4b48c673adb0fd7b3957d287e75921",
                    "dweb:/ipfs/QmNoBX8TY424bdQWyQC7y3kpKfgxyWxhLw7KEhhEEoBN9q"
                ],
                "license": "MIT"
            },
            "lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol": {
                "keccak256": "0x26eb0be0a698461dd262d479ed02537c2e0d551f3167b6d7dc8bbfa9189b8f61",
                "urls": [
                    "bzz-raw://67a141b0967dc79992e44ba3f64a6ab9cf36dc60f7d9a9e97c5ed0d0112899a6",
                    "dweb:/ipfs/QmT8QGFcEfnHJaZQsv62PsDqGHV6wDuxRrFHG9GKPjZCX2"
                ],
                "license": "MIT"
            },
            "lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/interfaces/IVRFCoordinatorV2Plus.sol": {
                "keccak256": "0x7dca2a64690ddd95ee05e422e1f61e7c1d701aaf5be1390ae12e9bd144266c36",
                "urls": [
                    "bzz-raw://d8a347ae8d28007a7537abdc153d3d400d330e02339e8070dd4d783dbdb4de2e",
                    "dweb:/ipfs/QmT4rCRw9LBkTYnjRSLNoVP6qhMWA1xg7Hp3wGrRSsV5YL"
                ],
                "license": "MIT"
            },
            "lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/interfaces/IVRFMigratableConsumerV2Plus.sol": {
                "keccak256": "0x8be8744e3b8380dc85354cf110e8caef8f394266e79120ad675a7da835ed2a85",
                "urls": [
                    "bzz-raw://12df6d3bd2130709c9f923e5dc8d6e8014c1d4bc35a2722c849f46bdbe1ea9cb",
                    "dweb:/ipfs/QmVswk94A2g9KEbK792tw5o4X27HWzP2cw7wPmuRr116js"
                ],
                "license": "MIT"
            },
            "lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/interfaces/IVRFSubscriptionV2Plus.sol": {
                "keccak256": "0x85b348297ce36794e3bf97a47c001fc216bd0ee243e91514a7b395f3fcd189b0",
                "urls": [
                    "bzz-raw://5b67dd54c0f1083d804f9c0ac6b6a62db1727b090f6d1afb0a8107baea7b40d8",
                    "dweb:/ipfs/QmbD4vuTA7sBtR4DxeDjKr2pC51xgw8RRef2AmodnH5B1F"
                ],
                "license": "MIT"
            },
            "lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/dev/libraries/VRFV2PlusClient.sol": {
                "keccak256": "0x839ad7a737ef18147b518b4ec3cbaf4a49dc994db65cf8369ed4e69d169a98a6",
                "urls": [
                    "bzz-raw://882f7357f1a4d7479adda35f81c130bb9a7bfa024d5b9617c75a0539116c2a1d",
                    "dweb:/ipfs/QmWzLDgcS9jUh4AT65dQRr46ZhGHgQ4KoNfSdFiFTFqneQ"
                ],
                "license": "MIT"
            },
            "src/CoinFlip.sol": {
                "keccak256": "0xc05552d94b72c7b49cdb2c2dcb32b4b17b2e4f4364b8c91bde4aacead978f556",
                "urls": [
                    "bzz-raw://79aa4b77891a59169856f7f96cf75f00955b2fee186343dd1ea29b539837c1a0",
                    "dweb:/ipfs/QmRtJ6mFrhKHEib6UqfojP9hTUPvqFh9yxkkXkBy2kLPmS"
                ],
                "license": "MIT"
            }
        },
        "version": 1
    },
    "id": 38
}